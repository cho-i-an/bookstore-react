{"ast":null,"code":"export const CartTypes={ADD:'ADD',REMOVE:'REMOVE',CLEAR:'CLEAR'};export const initialCartState=[];const findItem=(cart,id)=>cart.find(book=>book.id===id);export const cartReducer=(state,action)=>{let newState;// console.log(\"HHHH\")\nswitch(action.type){case CartTypes.ADD:if(findItem(state,action.book.bookId)){const newState=state.map(book=>book.id===action.book.bookId?{...book,quantity:book.quantity+1}:book);localStorage.setItem('cart',JSON.stringify(newState));return newState;}else{const newState=[...state,{id:action.id,book:action.book,quantity:1}];localStorage.setItem('cart',JSON.stringify(newState));// ];\nreturn newState;}case CartTypes.REMOVE:/*\n               will be defiend in Project 7\n             */if(findItem(state,action.book.bookId)){const newState=state.map(book=>book.id===action.book.bookId?{...book,quantity:book.quantity-1}:book).filter(book=>book.quantity>=1);localStorage.setItem('cart',JSON.stringify(newState));return newState;}else{localStorage.setItem('cart',JSON.stringify(state));return state;}case CartTypes.CLEAR:const newState=initialCartState;localStorage.setItem('cart',JSON.stringify(newState));// state = initialCartState;\nreturn newState;default:throw new Error(\"Invalid action type \".concat(action.type));}};","map":{"version":3,"names":["CartTypes","ADD","REMOVE","CLEAR","initialCartState","findItem","cart","id","find","book","cartReducer","state","action","newState","type","bookId","map","quantity","localStorage","setItem","JSON","stringify","filter","Error","concat"],"sources":["/Users/ann/Desktop/CS5244/IAnBookstoreReactSession/client/src/reducers/CartReducer.tsx"],"sourcesContent":["import {ShoppingCartItem, BookItem} from \"../types\";\nimport {Dispatch, ReducerAction} from \"react\";\n\n\nexport const CartTypes = {\n    ADD: 'ADD',\n    REMOVE: 'REMOVE',\n    CLEAR: 'CLEAR'\n};\n\nexport type AppActions = {\n    id: number;\n    type: 'ADD' | 'REMOVE' | 'CLEAR';\n    book: BookItem;\n}\n\nexport const initialCartState: ShoppingCartItem[] = [];\n\n\nconst findItem = (cart: any[], id: number) => cart.find((book) => book.id === id);\n\nexport const cartReducer = (state: ShoppingCartItem[],action: { type: any; book: { bookId: number; }; id: any; }) => {\n    let newState: ShoppingCartItem[];\n    // console.log(\"HHHH\")\n    switch (action.type) {\n        case CartTypes.ADD:\n\n\n            if (findItem(state, action.book.bookId)) {\n\n                const newState = state.map((book) => book.id === action.book.bookId ? {\n                    ...book,\n                    quantity: book.quantity + 1\n                } : book);\n\n\n                localStorage.setItem('cart', JSON.stringify(newState));\n\n                return newState;\n            } else {\n                const newState = [\n                    ...state,\n                    {\n                        id: action.id,\n                        book: action.book,\n                        quantity: 1\n                    }\n                ];\n\n                localStorage.setItem('cart', JSON.stringify(newState));\n\n                // ];\n                return newState;\n            }\n\n\n\n        case CartTypes.REMOVE:\n\n            /*\n               will be defiend in Project 7\n             */\n            if (findItem(state, action.book.bookId)) {\n                const newState = state.map((book) =>\n                    book.id === action.book.bookId\n                        ? { ...book, quantity: book.quantity - 1 }\n                        : book\n                )\n                    .filter((book) => book.quantity >= 1);\n\n                localStorage.setItem('cart', JSON.stringify(newState));\n                return newState\n\n            }else{\n                localStorage.setItem('cart', JSON.stringify(state));\n                return state\n            }\n\n\n        case CartTypes.CLEAR:\n            const newState = initialCartState\n            localStorage.setItem('cart', JSON.stringify(newState));\n            // state = initialCartState;\n            return newState;\n        default:\n            throw new Error(`Invalid action type ${action.type}`);\n\n\n    }\n\n};"],"mappings":"AAIA,MAAO,MAAM,CAAAA,SAAS,CAAG,CACrBC,GAAG,CAAE,KAAK,CACVC,MAAM,CAAE,QAAQ,CAChBC,KAAK,CAAE,OACX,CAAC,CAQD,MAAO,MAAM,CAAAC,gBAAoC,CAAG,EAAE,CAGtD,KAAM,CAAAC,QAAQ,CAAGA,CAACC,IAAW,CAAEC,EAAU,GAAKD,IAAI,CAACE,IAAI,CAAEC,IAAI,EAAKA,IAAI,CAACF,EAAE,GAAKA,EAAE,CAAC,CAEjF,MAAO,MAAM,CAAAG,WAAW,CAAGA,CAACC,KAAyB,CAACC,MAA0D,GAAK,CACjH,GAAI,CAAAC,QAA4B,CAChC;AACA,OAAQD,MAAM,CAACE,IAAI,EACf,IAAK,CAAAd,SAAS,CAACC,GAAG,CAGd,GAAII,QAAQ,CAACM,KAAK,CAAEC,MAAM,CAACH,IAAI,CAACM,MAAM,CAAC,CAAE,CAErC,KAAM,CAAAF,QAAQ,CAAGF,KAAK,CAACK,GAAG,CAAEP,IAAI,EAAKA,IAAI,CAACF,EAAE,GAAKK,MAAM,CAACH,IAAI,CAACM,MAAM,CAAG,CAClE,GAAGN,IAAI,CACPQ,QAAQ,CAAER,IAAI,CAACQ,QAAQ,CAAG,CAC9B,CAAC,CAAGR,IAAI,CAAC,CAGTS,YAAY,CAACC,OAAO,CAAC,MAAM,CAAEC,IAAI,CAACC,SAAS,CAACR,QAAQ,CAAC,CAAC,CAEtD,MAAO,CAAAA,QAAQ,CACnB,CAAC,IAAM,CACH,KAAM,CAAAA,QAAQ,CAAG,CACb,GAAGF,KAAK,CACR,CACIJ,EAAE,CAAEK,MAAM,CAACL,EAAE,CACbE,IAAI,CAAEG,MAAM,CAACH,IAAI,CACjBQ,QAAQ,CAAE,CACd,CAAC,CACJ,CAEDC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAEC,IAAI,CAACC,SAAS,CAACR,QAAQ,CAAC,CAAC,CAEtD;AACA,MAAO,CAAAA,QAAQ,CACnB,CAIJ,IAAK,CAAAb,SAAS,CAACE,MAAM,CAEjB;AACZ;AACA,eACY,GAAIG,QAAQ,CAACM,KAAK,CAAEC,MAAM,CAACH,IAAI,CAACM,MAAM,CAAC,CAAE,CACrC,KAAM,CAAAF,QAAQ,CAAGF,KAAK,CAACK,GAAG,CAAEP,IAAI,EAC5BA,IAAI,CAACF,EAAE,GAAKK,MAAM,CAACH,IAAI,CAACM,MAAM,CACxB,CAAE,GAAGN,IAAI,CAAEQ,QAAQ,CAAER,IAAI,CAACQ,QAAQ,CAAG,CAAE,CAAC,CACxCR,IACV,CAAC,CACIa,MAAM,CAAEb,IAAI,EAAKA,IAAI,CAACQ,QAAQ,EAAI,CAAC,CAAC,CAEzCC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAEC,IAAI,CAACC,SAAS,CAACR,QAAQ,CAAC,CAAC,CACtD,MAAO,CAAAA,QAAQ,CAEnB,CAAC,IAAI,CACDK,YAAY,CAACC,OAAO,CAAC,MAAM,CAAEC,IAAI,CAACC,SAAS,CAACV,KAAK,CAAC,CAAC,CACnD,MAAO,CAAAA,KAAK,CAChB,CAGJ,IAAK,CAAAX,SAAS,CAACG,KAAK,CAChB,KAAM,CAAAU,QAAQ,CAAGT,gBAAgB,CACjCc,YAAY,CAACC,OAAO,CAAC,MAAM,CAAEC,IAAI,CAACC,SAAS,CAACR,QAAQ,CAAC,CAAC,CACtD;AACA,MAAO,CAAAA,QAAQ,CACnB,QACI,KAAM,IAAI,CAAAU,KAAK,wBAAAC,MAAA,CAAwBZ,MAAM,CAACE,IAAI,CAAE,CAAC,CAG7D,CAEJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}